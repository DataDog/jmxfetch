stages:
  - deploy_to_sonatype
  - create_key

variables:
  REGISTRY: 486234852809.dkr.ecr.us-east-1.amazonaws.com

# From the tagged repo, push the release artifact
deploy_to_sonatype:
  stage: deploy_to_sonatype

  rules:
    # Build tags automatically
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG =~ /^\d+.\d+.\d+/'

    # Allow manual triggering of the pipeline
    - when: manual
      allow_failure: true

  tags:
    - "runner:docker"
    - "size:large"

  image: maven:3.6.3-jdk-8-slim

  script:
    - export SONATYPE_USER=$(aws ssm get-parameter --region us-east-1 --name ci.jmxfetch.publishing.sonatype_username --with-decryption --query "Parameter.Value" --out text)
    - export SONATYPE_PASS=$(aws ssm get-parameter --region us-east-1 --name ci.jmxfetch.publishing.sonatype_password --with-decryption --query "Parameter.Value" --out text)
    - export GPG_PASSPHRASE=$(aws ssm get-parameter --region us-east-1 --name ci.jmxfetch.signing.gpg_passphrase --with-decryption --query "Parameter.Value" --out text)

    - gpg_key=$(aws ssm get-parameter --region us-east-1 --name ci.jmxfetch.signing.gpg_private_key --with-decryption --query "Parameter.Value" --out text)
    - printf -- "$gpg_key" | gpg --import --batch

    - mvn -DperformRelease=true --settings ./settings.xml clean validate jar:jar source:jar javadoc:jar assembly:single deploy

# This job creates the GPG key used to sign the releases
create_key:
  stage: create_key
  when: manual

  tags:
    - "runner:docker"
    - "size:large"

  image: $REGISTRY/ci/agent-key-management-tools/gpg:1

  variables:
    PROJECT_NAME: "jmxfetch"

  script:
    - /create.sh
